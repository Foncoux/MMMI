plot(x = 1:295, data_new[2,], xlim = c(1, 295))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,300)))
par(new = TRUE)
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,300)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,300)))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
for (i in 2:295) {
data_new[5,i] = data[5,i] - data[5,i]
}
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,300)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,300)))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
plot(x = 1:295, data_new[3,], xlim = c(1, 295))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[3,], xlim = c(1, 295))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
plot(x = 1:295, data_new[4,], xlim = c(1, 295))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[4,], xlim = c(1, 295))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
plot(x = 1:295, data_new[4,], xlim = c(1, 295))
plot(x = 1:295, data_new[4,], xlim = c(1, 295))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[4,], xlim = c(1, 295))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
plot(x = 1:295, death[4,], xlim = c(1, 295), ylim=range(c(0,150000)))
plot(x = 1:295, death[4,], xlim = c(1, 295), ylim=range(c(0,170000)))
par(new = TRUE)
plot(x = 1:295, death[4,], xlim = c(1, 295), ylim=range(c(0,170000)))
par(new = TRUE)
plot(x = 1:295, data_new[2,], xlim = c(1, 295), ylim=range(c(0,170000)))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, death[4,], xlim = c(1, 295), ylim=range(c(0,170000)))
par(new = TRUE)
plot(x = 1:295, data_new[2,], xlim = c(1, 295), ylim=range(c(0,170000)))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, death[4,], xlim = c(1, 295), ylim=range(c(0,170000)))
par(new = TRUE)
plot(x = 1:295, data_new[2,], xlim = c(1, 295), ylim=range(c(0,170000)))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, death[4,], xlim = c(1, 295), ylim=range(c(0,170000)))
par(new = TRUE)
plot(x = 1:295, data_new[2,], xlim = c(1, 295), ylim=range(c(0,170000)))
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, death[4,], xlim = c(1, 295), ylim=range(c(0,170000)))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, death[4,], xlim = c(1, 295), ylim=range(c(0,170000)))
par(new = TRUE)
plot(x = 1:295, data_new[2,], xlim = c(1, 295), ylim=range(c(0,170000)))
data = data[,-296]
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, death[4,], xlim = c(1, 295), ylim=range(c(0,170000)))
par(new = TRUE)
plot(x = 1:295, data_new[2,], xlim = c(1, 295), ylim=range(c(0,170000)))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
plot(x = 1:295, data_new[2,], xlim = c(1, 295), ylim=range(c(0,170000)))
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
plot(x = 1:295, data_new[3,], xlim = c(1, 295))
plot(x = 1:295, data_new[4,], xlim = c(1, 295))
plot(x = 1:295, data_new[5,], xlim = c(1, 295))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
load("~/Téléchargements/20230604221900_social_contact_analysis.RData")
location_matrices_per_capita$total
write.csv(location_matrices_per_capita$total,file="social_contact_matrix.csv",row.names=F)
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[1,], xlim = c(1, 295))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
location_matrices$total
write.csv(location_matrices$total,file="social_contact_matrix.csv",row.names=F)
location_matrices_per_capita$total
write.csv(location_matrices_per_capita$total,file="social_contact_matrix.csv",row.names=F)
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
data = read.csv('integration.txt',header = FALSE, sep = " ")
death = read.table('day_data.csv',header = FALSE, sep = ",")
data = data[,-296]
death = death[,-1]
data_new = data
plot(x = 1:295, data_new[5,], xlim = c(1, 295), ylim=range(c(0,10000)))
plot(x = 1:295, data_new[2,], xlim = c(1, 295))
load('social_contact_analysis.RData')
location_matrices$otherplace + location_matrices$leisure
load('social_contact_analysis.RData')
rm(list = ls())
library(jsonlite)
data <- fromJSON("integration.json")
data0 = data$Classe1
data1 = data$Classe2
num_data0 <- lapply(data0, as.numeric)
num_data1 <- lapply(data1, as.numeric)
data_classe1 <- as.data.frame(num_data0)
data_classe2 <- as.data.frame(num_data1)
data_all <- data_classe1# + data_classe2
death = read.table('day_data.csv',header = FALSE, sep = ",")
month = read.table('death_month_age.csv',header = FALSE, sep = ",")
hosp = read.table('hosp_week_age2.csv',header = FALSE, sep = ",")
death = death[,-1]
month = month[,-1]
hosp = hosp[,-1]
plot(x = 1:295, death[1,], xlim = c(1, 295), ylim=range(c(0,10000)))
par(new = TRUE)
plot(x = 1:295, data_all$D, xlim = c(1, 295), ylim=range(c(0,10000)))
MCMC_data <- fromJSON("MCMC_result/data_MCMC0.json")
MCMC_data0 = MCMC_data$Classe1
MCMC_data1 = MCMC_data$Classe2
num_MCMC_data0 <- lapply(MCMC_data0, as.numeric)
num_MCMC_data1 <- lapply(MCMC_data1, as.numeric)
df_temp0 <- as.data.frame(num_MCMC_data0)
df_temp1 <- as.data.frame(num_MCMC_data1)
dfMCMC0 =df_temp0
dfMCMC1 = df_temp1
Classe1_list = list()
Classe1_list[[length(Classe1_list) + 1]] <- dfMCMC0
Classe2_list = list()
Classe2_list[[length(Classe2_list) + 1]] <- dfMCMC1
for (i in 1:99) {
filename <- paste0("MCMC_result/data_MCMC", i, ".json")
MCMC_data <- fromJSON(filename)
MCMC_data0 = MCMC_data$Classe1
MCMC_data1 = MCMC_data$Classe2
num_MCMC_data0 <- lapply(MCMC_data0, as.numeric)
num_MCMC_data1 <- lapply(MCMC_data1, as.numeric)
df_temp0 <- as.data.frame(num_MCMC_data0)
df_temp1 <- as.data.frame(num_MCMC_data1)
dfMCMC0 =df_temp0
dfMCMC1 = df_temp1
Classe1_list[[length(Classe1_list) + 1]] <- dfMCMC0
Classe2_list[[length(Classe2_list) + 1]] <- dfMCMC1
}
Compartiment = 1
df1 <- data.frame(matrix(ncol = 295, nrow = 1000))
colnames(df1) <- paste0("Jour_", 1:295)
df2 <- data.frame(matrix(ncol = 295, nrow = 1000))
colnames(df2) <- paste0("Jour_", 1:295)
for (j in 1:295) {
COMP1 = c()
COMP2 = c()
for (i in 1:100) {
COMP1 = c(COMP1,Classe1_list[[i]][j,Compartiment])
COMP2 = c(COMP2,Classe2_list[[i]][j,Compartiment])
}
df1[,j] = COMP1
df2[,j] = COMP2
}
MCMC_data <- fromJSON("MCMC_result/data_MCMC0.json")
rm(list = ls())
MCMC_data <- fromJSON("MCMC_result/data_MCMC0.json")
MCMC_data0 = MCMC_data$Classe1
MCMC_data <- fromJSON("MCMC_result/data_MCMC0.json")
MCMC_data0 = MCMC_data$Classe1
num_MCMC_data0 <- lapply(MCMC_data0, as.numeric)
df_temp0 <- as.data.frame(num_MCMC_data0)
dfMCMC0 =df_temp0
Classe1_list = list()
Classe1_list[[length(Classe1_list) + 1]] <- dfMCMC0
for (i in 1:99) {
filename <- paste0("MCMC_result/data_MCMC", i, ".json")
MCMC_data <- fromJSON(filename)
MCMC_data0 = MCMC_data$Classe1
#  MCMC_data1 = MCMC_data$Classe2
num_MCMC_data0 <- lapply(MCMC_data0, as.numeric)
#  num_MCMC_data1 <- lapply(MCMC_data1, as.numeric)
df_temp0 <- as.data.frame(num_MCMC_data0)
#  df_temp1 <- as.data.frame(num_MCMC_data1)
dfMCMC0 =df_temp0
#  dfMCMC1 = df_temp1
Classe1_list[[length(Classe1_list) + 1]] <- dfMCMC0
#  Classe2_list[[length(Classe2_list) + 1]] <- dfMCMC1
}
Compartiment = 1
df1 <- data.frame(matrix(ncol = 295, nrow = 1000))
colnames(df1) <- paste0("Jour_", 1:295)
#df2 <- data.frame(matrix(ncol = 295, nrow = 1000))
#colnames(df2) <- paste0("Jour_", 1:295)
for (j in 1:295) {
COMP1 = c()
#COMP2 = c()
for (i in 1:100) {
COMP1 = c(COMP1,Classe1_list[[i]][j,Compartiment])
# COMP2 = c(COMP2,Classe2_list[[i]][j,Compartiment])
}
df1[,j] = COMP1
#df2[,j] = COMP2
}
df_all = df1
df_stat1 <- data.frame(median = numeric(295), lower = numeric(295), upper = numeric(295))
df_stat1 <- data.frame(median = numeric(295), lower = numeric(295), upper = numeric(295))
for (j in 1:295) {
df_stat1$median[j] = median(df1[,j])
df_stat1$lower[j] = quantile(df1[,j], c(0.05, 0.95))[1]
df_stat1$upper[j] = quantile(df1[,j], c(0.05, 0.95))[2]
}
df_stat2 <- data.frame(median = numeric(295), lower = numeric(295), upper = numeric(295))
library(ggplot2)
days = 1:295
ggplot(df_stat1, aes(x=days)) +
geom_line(aes(y=median), color="blue") +
geom_ribbon(aes(ymin=lower, ymax=upper), fill="skyblue", alpha=0.4) +
labs(title="Daily Simulations with 95% Credible Interval", y="Value") +
theme_minimal()
Compartiment = D
df1 <- data.frame(matrix(ncol = 295, nrow = 1000))
colnames(df1) <- paste0("Jour_", 1:295)
#df2 <- data.frame(matrix(ncol = 295, nrow = 1000))
#colnames(df2) <- paste0("Jour_", 1:295)
for (j in 1:295) {
COMP1 = c()
#COMP2 = c()
for (i in 1:100) {
COMP1 = c(COMP1,Classe1_list[[i]][j,Compartiment])
# COMP2 = c(COMP2,Classe2_list[[i]][j,Compartiment])
}
df1[,j] = COMP1
#df2[,j] = COMP2
}
Compartiment = D
df1 <- data.frame(matrix(ncol = 295, nrow = 1000))
colnames(df1) <- paste0("Jour_", 1:295)
#df2 <- data.frame(matrix(ncol = 295, nrow = 1000))
#colnames(df2) <- paste0("Jour_", 1:295)
for (j in 1:295) {
COMP1 = c()
#COMP2 = c()
for (i in 1:100) {
COMP1 = c(COMP1,Classe1_list[[i]][j,Compartiment])
# COMP2 = c(COMP2,Classe2_list[[i]][j,Compartiment])
}
df1[,j] = COMP1
#df2[,j] = COMP2
}
df_stat1 <- data.frame(median = numeric(295), lower = numeric(295), upper = numeric(295))
for (j in 1:295) {
df_stat1$median[j] = median(df1[,j])
df_stat1$lower[j] = quantile(df1[,j], c(0.05, 0.95))[1]
df_stat1$upper[j] = quantile(df1[,j], c(0.05, 0.95))[2]
}
df_stat2 <- data.frame(median = numeric(295), lower = numeric(295), upper = numeric(295))
library(ggplot2)
days = 1:295
ggplot(df_stat1, aes(x=days)) +
geom_line(aes(y=median), color="blue") +
geom_ribbon(aes(ymin=lower, ymax=upper), fill="skyblue", alpha=0.4) +
labs(title="Daily Simulations with 95% Credible Interval", y="Value") +
theme_minimal()
for (i in 1:99) {
filename <- paste0("MCMC_result/data_MCMC", i, ".json")
MCMC_data <- fromJSON(filename)
MCMC_data0 = MCMC_data$Classe1
#  MCMC_data1 = MCMC_data$Classe2
num_MCMC_data0 <- lapply(MCMC_data0, as.numeric)
#  num_MCMC_data1 <- lapply(MCMC_data1, as.numeric)
df_temp0 <- as.data.frame(num_MCMC_data0)
#  df_temp1 <- as.data.frame(num_MCMC_data1)
dfMCMC0 =df_temp0
#  dfMCMC1 = df_temp1
Classe1_list[[length(Classe1_list) + 1]] <- dfMCMC0
#  Classe2_list[[length(Classe2_list) + 1]] <- dfMCMC1
}
Compartiment = D
Compartiment = 5
df1 <- data.frame(matrix(ncol = 295, nrow = 1000))
colnames(df1) <- paste0("Jour_", 1:295)
#df2 <- data.frame(matrix(ncol = 295, nrow = 1000))
#colnames(df2) <- paste0("Jour_", 1:295)
for (j in 1:295) {
COMP1 = c()
#COMP2 = c()
for (i in 1:100) {
COMP1 = c(COMP1,Classe1_list[[i]][j,Compartiment])
# COMP2 = c(COMP2,Classe2_list[[i]][j,Compartiment])
}
df1[,j] = COMP1
#df2[,j] = COMP2
}
df_all = df1 + df2
df_stat1 <- data.frame(median = numeric(295), lower = numeric(295), upper = numeric(295))
for (j in 1:295) {
df_stat1$median[j] = median(df1[,j])
df_stat1$lower[j] = quantile(df1[,j], c(0.05, 0.95))[1]
df_stat1$upper[j] = quantile(df1[,j], c(0.05, 0.95))[2]
}
library(ggplot2)
days = 1:295
ggplot(df_stat1, aes(x=days)) +
geom_line(aes(y=median), color="blue") +
geom_ribbon(aes(ymin=lower, ymax=upper), fill="skyblue", alpha=0.4) +
labs(title="Daily Simulations with 95% Credible Interval", y="Value") +
theme_minimal()
rm(list = ls())
library(jsonlite)
data <- fromJSON("MCMC_param/save_MCMC0.json")
data0 = data$classe_0
num_data0 <- lapply(data0, as.numeric)
num_data0$x0 = num_data0$x0[2]*17282163
df_temp0 <- as.data.frame(num_data0)
df0 =df_temp0
for (i in 1:999) {
filename <- paste0("MCMC_param/save_MCMC", i, ".json")
data <- fromJSON(filename)
data0 = data$classe_0
#  data1 = data$classe_1
num_data0 <- lapply(data0, as.numeric)
#  num_data1 <- lapply(data1, as.numeric)
num_data0$x0 = num_data0$x0[2]*17282163
#  num_data1$x0 = num_data1$x0[2]*17282163
df_temp0 <- as.data.frame(num_data0)
#  df_temp1 <- as.data.frame(num_data1)
df0 = rbind(df0, df_temp0)
#  df1 = rbind(df1, df_temp1)
}
View(data0)
View(data0)
for (i in 1:99) {
filename <- paste0("MCMC_param/save_MCMC", i, ".json")
data <- fromJSON(filename)
data0 = data$classe_0
#  data1 = data$classe_1
num_data0 <- lapply(data0, as.numeric)
#  num_data1 <- lapply(data1, as.numeric)
num_data0$x0 = num_data0$x0[2]*17282163
#  num_data1$x0 = num_data1$x0[2]*17282163
df_temp0 <- as.data.frame(num_data0)
#  df_temp1 <- as.data.frame(num_data1)
df0 = rbind(df0, df_temp0)
#  df1 = rbind(df1, df_temp1)
}
intervals0 <- apply(df0, 2, function(column) quantile(column, c(0.025, 0.975)))
intervals0
